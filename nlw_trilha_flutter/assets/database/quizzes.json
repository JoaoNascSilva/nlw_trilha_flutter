[
 {
  "title": "Iniciante",
  "imagem": "blocks",
  "level": "facil",
  "questionAnswered": 0,
  "questions": [
    {
      "title": "O que é Flutter?",
      "awnsers": [
        {"title": "Flutter é um kit de ferramentas de backend para a criação de aplicativos móveis."},
        {"title": "É uma linguagem e programação para utilizar o framework Dart."},
        {"title": "Flutter é um kit de ferramentas de UI para a criação de aplicações multi plataforma.","isRight" : true},
        {"title": "Não sei."}
      ]
  },
  {
      "title": "O que é Dart? [Marque a resposta incorreta.]",
      "awnsers": [
        {"title": "Dart é uma linguagem de programação orientada a objetos de uso geral com sintaxe de estilo C."},
        {"title": "É uma linguagem importante para a criação de aplicativos Flutter."},
        {"title": "A linguagem Dart pode ser compilada AOT (Ahead-of-Time) e JIT (Just-in-Time.)"},
        {"title": "Dart não é uma linguagem orientada a objetos.","isRight" : true}
      ]
  },
  {
      "title": "O que é o arquivo pubspec.yaml?",
      "awnsers": [
        {"title": "É o arquivo de configuração do projeto","isRight" : true},
        {"title": "É o arquivo de versionamento do projeto"},
        {"title": "É o arquivo de strings do projeto"},
        {"title": "É o arquivo de sdk do projeto"}
      ]
  },
  {
      "title": "Qual é a diferença entre as funções \"main ()\" e \"runApp ()\" no Flutter?",
      "awnsers": [
        {"title": "A função main() é responsável por finalizar o programa. Sem a função main(), não podemos escrever nenhum programa no Flutter. E a função runApp () é responsável por retornar os widgets que estão anexados à tela como uma raiz da árvore de widgets e serão renderizados na tela."},
        {"title": "A função main() é responsável por iniciar o programa. Sem a função main(), não podemos escrever nenhum programa no Flutter. E a função runApp () é responsável por abortar os widgets que estão anexados à tela como uma raiz da árvore de widgets e serão renderizados na tela."},
        {"title": "A função main() é responsável por iniciar o programa. Sem a função main(), não podemos escrever nenhum programa no Flutter. E a função runApp () é responsável por retornar os widgets que estão anexados à tela como uma raiz da árvore de widgets e serão renderizados na tela.","isRight" : true},
        {"title": "A função main() é responsável por iniciar o programa. Sem a função main(), não podemos escrever nenhuma função no Flutter. E a função runApp () é responsável por retornar os widgets que estão anexados à tela como uma raiz da árvore de widgets e serão renderizados na tela."}
      ]
  },
  {
      "title": "O que é um 'future' no Dart?",
      "awnsers": [
        {"title": "É usado para programação assíncrona. O Future representa um valor potencial (ou erro) que estará disponível em algum momento no futuro.","isRight" : true},
        {"title": "É usado para programação síncrona. O Future representa um valor potencial (ou erro) que estará disponível em algum momento no futuro"},
        {"title": "É usado para programação assíncrona. O Future representa um estado potencial (ou erro) que estará disponível em algum momento no futuro"},
        {"title": "É usado para programação síncrona. O Future representa um valor potencial (ou erro) que não ficará no futuro"}
      ]
  }, {
      "title": "Para qu servem as palavras chave async e await?",
      "awnsers": [
        {"title": "Essas são palavras-chave que tornam a programação assíncrona muito mais fácil de usar e ler. Podemos usá-los em vez de escrever um retorno then de chamada em objetos Future."},
        {"title": "Serve para demarcar funções sincronas."},
        {"title": "async serve para atrazar a chamada da função"},
        {"title": "await serve para sincronizar a chamada atravez do async","isRight" : true}
      ]
  }
]
},   
{
  "title": "Intermediario",
  "imagem": "blocks",
  "level": "medio",
  "questionAnswered": 3,
  "questions": [
    {
      "title": "Por que a construção do primeiro aplicativo Flutter demora tanto?",
      "awnsers": [
        {"title": "Ao criar o aplicativo Flutter pela primeira vez, isso levará mais tempo. É porque o Flutter destruiu o arquivo APK ou IPA específico do dispositivo. Assim, o Gradle e o Xcode são usados ​​para construir o arquivo, demorando muito."},
        {"title": "Ao criar o aplicativo Flutter pela primeira vez, isso levará mais tempo. É porque o Flutter construiu o arquivo APK ou IPE específico do dispositivo. Assim, o Gradle e o Xcode são usados ​​para construir o arquivo, demorando muito."},
        {"title": "Ao criar o aplicativo Flutter pela primeira vez, isso levará mais tempo. É porque o Flutter construiu o arquivo APK ou IPA específico do dispositivo. Assim, o AndroidManifest e o Xcode são usados ​​para construir o arquivo, demorando muito."},
        {"title": "Ao criar o aplicativo Flutter pela primeira vez, isso levará mais tempo. É porque o Flutter construiu o arquivo APK ou IPA específico do dispositivo. Assim, o Gradle e o Xcode são usados ​​para construir o arquivo, demorando muito.","isRight" : true}
      ]
  },
  {
      "title": "Que tipo de animação permite que você represente o comportamento do mundo real?",
      "awnsers": [
        {"title": "A animação baseada em funções matematicas complexas permite representar o comportamento do mundo real no Flutter."},
        {"title": "A animação baseada em geometria permite representar o comportamento do mundo real no Flutter."},
        {"title": "A animações implicitas permite representar o comportamento do mundo real no Flutter."},
        {"title": "A animação baseada em física permite representar o comportamento do mundo real no Flutter.","isRight" : true}
      ]
  },
  {
      "title": "O que é e qual a finalidade da palavra reservada this?",
      "awnsers": [
        {"title": "A palavra-chave this pode ser usada em Classes como um atalho útil para atribuir valores a propriedades - por exemplo MyClass(this.param, this.param2, this.param3);"},
        {"title": "A palavra-chave this pode ser usada em como um atalho útil para atribuir um estado a uma propriedade - por exemplo MyClass(this.param = state, this.param2, this.param3);"},
        {"title": "A palavra-chave this não pode ser usada em construtores atribuir valores a propriedades"},
        {"title": "A palavra-chave this pode ser usada em construtores como um atalho útil para atribuir valores a propriedades - por exemplo MyClass(this.param, this.param2, this.param3);","isRight" : true}
      ]
  },
  {
      "title": "Selecione a opção que nao faz parte do ciclo de vida e um StatefulWidget",
      "awnsers": [
        {"title": "deactivate()"},
        {"title": "didUpdateWidget()"},
        {"title": "build()"},
        {"title": "buildChangeDependencies()","isRight" : true}
      ]
  },
  {
      "title": "O que é um 'InheritedWidget'?",
      "awnsers": [
        {"title": "É um tipo especial de widget que contém apenas estados - não descreve a interface do usuário. Ele define um contexto na raiz de uma subárvore e pode fornecer esse contexto de maneira eficiente para cada widget na árvore."},
        {"title": "É um tipo especial de widget que contém apenas dados -  descreve a interface do usuário. Ele define um contexto na raiz de uma subárvore e pode fornecer esse contexto de maneira eficiente para cada widget na árvore."},
        {"title": "É um tipo especial de widget que contém apenas dados - não descreve a interface do usuário. Ele não fornece um contexto cada widget na árvore."},
        {"title": "É um tipo especial de widget que contém apenas dados - não descreve a interface do usuário. Ele define um contexto na raiz de uma subárvore e pode fornecer esse contexto de maneira eficiente para cada widget na árvore.","isRight" : true}
      ]
  }, {
      "title": "Quando você usa 'double.infinity’?",
      "awnsers": [
        {"title": "É usado quando você deseja especificar que o widget deve ser tão grande quanto o filho."},
        {"title": "É usado quando você deseja especificar que o widget deve ser tão grande quanto o pai.","isRight" : true},
        {"title": "É usado quando você deseja especificar que o widget deve ser tão grande quanto a tela do dispositivo."},
        {"title": "É usado quando você deseja especificar que o widget deve ser tão pequeno quanto o pai."}
      ]
  }
]
},   
{
  "title": "Avançado",
  "imagem": "blocks",
  "level": "dificil",
  "questionAnswered": 3,
  "questions": [
    {
      "title": "Existe alguma maneira de descartar o teclado programaticamente?",
      "awnsers": [
        {"title": "FocusScope.of(context).infocus();"},
        {"title": "FocusScope.of(context).onfocus();"},
        {"title": "FocusScope.of(context).focus();"},
        {"title": "FocusScope.of(context).unfocus();","isRight" : true}
      ]
  },
  {
      "title": "Quais são as maneiras de adicionar um 'ListView' a uma coluna?",
      "awnsers": [
        {"title": "Precisamos definir explicitamente a largura do ListView, usar a propriedade shrinkWrap no ListView ou envolver o ListView com um widget Expanded."},
        {"title": "Precisamos definir a largura do ListView, usar a propriedade shrinkWrap  no ListViewou envolver o ListViewcom um widget Expanded."},
        {"title": "Precisamos definir explicitamente a altura do ListView, usar a propriedade onTap  no ListViewou envolver o ListViewcom um widget Expanded."},
        {"title": "Precisamos definir explicitamente a altura do ListView, usar a propriedade shrinkWrap  no ListViewou envolver o ListViewcom um widget Expanded.","isRight" : true}
      ]
  },
  {
      "title": "Qual é a razão por trás do texto com um sublinhado duplo amarelo ?",
      "awnsers": [
        {"title": "Isso significa que uma instância do tema está faltando como filho"},
        {"title": "Isso significa que precisamos envolver o Text com um Conteiner"},
        {"title": "Isso significa que precisamos envolver o Text com um Expanded"},
        {"title": "Isso significa que uma instância do tema está faltando como pai","isRight" : true}
      ]
  },
  {
    "title": "O que é um 'InheritedWidget'?",
    "awnsers": [
      {"title": "É um tipo especial de widget que contém apenas estados - não descreve a interface do usuário. Ele define um contexto na raiz de uma subárvore e pode fornecer esse contexto de maneira eficiente para cada widget na árvore."},
      {"title": "É um tipo especial de widget que contém apenas dados -  descreve a interface do usuário. Ele define um contexto na raiz de uma subárvore e pode fornecer esse contexto de maneira eficiente para cada widget na árvore."},
      {"title": "É um tipo especial de widget que contém apenas dados - não descreve a interface do usuário. Ele não fornece um contexto cada widget na árvore."},
      {"title": "É um tipo especial de widget que contém apenas dados - não descreve a interface do usuário. Ele define um contexto na raiz de uma subárvore e pode fornecer esse contexto de maneira eficiente para cada widget na árvore.","isRight" : true}
    ]
},
{
  "title": "Que tipo de animação permite que você represente o comportamento do mundo real?",
  "awnsers": [
    {"title": "A animação baseada em funções matematicas complexas permite representar o comportamento do mundo real no Flutter."},
    {"title": "A animação baseada em geometria permite representar o comportamento do mundo real no Flutter."},
    {"title": "A animações implicitas permite representar o comportamento do mundo real no Flutter."},
    {"title": "A animação baseada em física permite representar o comportamento do mundo real no Flutter.","isRight" : true}
  ]
},  {
  "title": "Por que a construção do primeiro aplicativo Flutter demora tanto?",
  "awnsers": [
    {"title": "Ao criar o aplicativo Flutter pela primeira vez, isso levará mais tempo. É porque o Flutter destruiu o arquivo APK ou IPA específico do dispositivo. Assim, o Gradle e o Xcode são usados ​​para construir o arquivo, demorando muito."},
    {"title": "Ao criar o aplicativo Flutter pela primeira vez, isso levará mais tempo. É porque o Flutter construiu o arquivo APK ou IPE específico do dispositivo. Assim, o Gradle e o Xcode são usados ​​para construir o arquivo, demorando muito."},
    {"title": "Ao criar o aplicativo Flutter pela primeira vez, isso levará mais tempo. É porque o Flutter construiu o arquivo APK ou IPA específico do dispositivo. Assim, o AndroidManifest e o Xcode são usados ​​para construir o arquivo, demorando muito."},
    {"title": "Ao criar o aplicativo Flutter pela primeira vez, isso levará mais tempo. É porque o Flutter construiu o arquivo APK ou IPA específico do dispositivo. Assim, o Gradle e o Xcode são usados ​​para construir o arquivo, demorando muito.","isRight" : true}
  ]
}
]
}

]